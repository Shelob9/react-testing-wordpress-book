{"componentChunkName":"component---src-templates-docs-js","path":"/testing-react-wordpress-blocks/2-setting-up","webpackCompilationHash":"dbe3376deba6db37c54c","result":{"data":{"site":{"siteMetadata":{"title":"JavaScript Testing In And Around WordPress | Josh Pollock","docsLocation":"https://github.com/shelob9/react-wordpress-testing/tree/master/content"}},"mdx":{"fields":{"id":"ea5d613d-72fd-567a-9b85-07fbf7e35685","title":"Creating A WordPress Plugin Using WordPress Scripts","slug":"/testing-react-wordpress-blocks/2-setting-up"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"metaTitle\": \"Setting Up Your Plugin\",\n  \"title\": \"Creating A WordPress Plugin Using WordPress Scripts\",\n  \"metaDescription\": \"desc\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In the first section of this course, we built a small React app. In this section, we will set up a plugin to use those components in a Gutenberg block. You will learn how to apply the technical skills of React testing and the TDD methodology to WordPress block development.\"), mdx(\"h2\", null, \"Creating A Block Plugin\"), mdx(\"p\", null, \"In your local WordPress' plugins directory, create a new directory for this plugin and set up package.json following these steps:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inititalize package.json\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm init\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Answer all the questions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add WordPress Scripts\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"yarn add @wordpress/scripts\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add a JavaScript file at \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/src/index.js\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is the main JavaScript file for the block.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a block.json\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://gist.github.com/Shelob9/f2c97a5803d02a8b82217af670b5b008#file-block-json\"\n  }), \"Copy and edit this file\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a main plugin file to enqueue JavaScript and CSS.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://gist.github.com/Shelob9/f2c97a5803d02a8b82217af670b5b008#file-plugin-php\"\n  }), \"Copy and edit this file\"))))), mdx(\"h2\", null, \"Add Scripts To package.json\"), mdx(\"p\", null, \"Yarn and npm can be used as a test runner. Instead of memorizing the commands that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@wordpress/scripts\"), \" provides, we should add shortcuts in package.json scripts. See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/@wordpress/scripts\"\n  }), \"the README\"), \" for more information.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"{\\n  \\\"scripts\\\": {\\n    \\\"build\\\": \\\"wp-scripts build\\\",\\n    \\\"start\\\": \\\"wp-scripts start\\\",\\n    \\\"test:e2e\\\": \\\"wp-scripts test-e2e --config e2e/jest.config.js\\\",\\n    \\\"test:unit\\\": \\\"wp-scripts test-unit-js --config jest.config.js\\\"\\n  }\\n}\\n\")), mdx(\"p\", null, \"At this point, running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn build\"), \" should compile the JavaScript in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/index.js\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/build/index.min.js\"), \". If so, you are probably ready to write the plugin code.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#creating-a-block-plugin","title":"Creating A Block Plugin"},{"url":"#add-scripts-to-packagejson","title":"Add Scripts To package.json"}]},"parent":{"__typename":"File","relativePath":"testing-react-wordpress-blocks/2-setting-up.md"},"frontmatter":{"metaTitle":"Setting Up Your Plugin","metaDescription":"desc"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/about","title":"About"}}},{"node":{"fields":{"slug":"/testing-background","title":"Types of Tests"}}},{"node":{"fields":{"slug":"/","title":"JavaScript Testing In And Around WordPress"}}},{"node":{"fields":{"slug":"/next","title":"Next Steps"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/testing-react-apps","title":"Testing React Apps"}}},{"node":{"fields":{"slug":"/testing-background/3-integration-tests","title":"Integration Tests"}}},{"node":{"fields":{"slug":"/testing-background/2-unit-tests","title":"Unit Tests"}}},{"node":{"fields":{"slug":"/testing-react-wordpress-blocks","title":"Testing WordPress Blocks"}}},{"node":{"fields":{"slug":"/testing-background/4-acceptance-tests","title":"Acceptance Tests"}}},{"node":{"fields":{"slug":"/testing-react-apps/4-integration-testing-react-apps","title":"Integration Testing React Apps"}}},{"node":{"fields":{"slug":"/testing-react-apps/5-writing-tdd-react-components","title":"Writing Test Driven React Components"}}},{"node":{"fields":{"slug":"/testing-react-apps/2-questions-and-specs","title":"Questions and Scopes"}}},{"node":{"fields":{"slug":"/testing-react-wordpress-blocks/2-setting-up","title":"Creating A WordPress Plugin Using WordPress Scripts"}}},{"node":{"fields":{"slug":"/testing-react-wordpress-blocks/5-writing-tdd-blocks","title":"Test-Driven Gutenberg Blocks"}}},{"node":{"fields":{"slug":"/testing-react-wordpress-blocks/3-structure","title":"Structuring  WordRress Plugin For Testablity"}}},{"node":{"fields":{"slug":"/testing-react-wordpress-blocks/4-writing-block-tests","title":"Wrting Tests For WordPress Blocks"}}},{"node":{"fields":{"slug":"/testing-react-apps/3-unit-testing-react","title":"Unit Testing React Apps"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"ea5d613d-72fd-567a-9b85-07fbf7e35685"}}}